import os
import logging
from aiogram import Bot, Dispatcher, types
from aiogram.utils import executor
import openai
import requests

# –ó–∞–≥—Ä—É–∑–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
TELEGRAM_TOKEN = os.getenv("API_TOKEN")
VK_TOKEN = os.getenv("VK_TOKEN")
VK_GROUP_ID = os.getenv("VK_GROUP_ID")
openai.api_key = os.getenv("OPENAI_API_KEY")

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(level=logging.INFO)

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞
bot = Bot(token=TELEGRAM_TOKEN)
dp = Dispatcher(bot)

# –ü—Ä–∏–º–µ—Ä –∫–æ–º–∞–Ω–¥—ã
@dp.message_handler(commands=["start"])
async def send_welcome(message: types.Message):
    await message.reply("–ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç CLANDESTINO. –ì–æ—Ç–æ–≤ –∫ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ –º–æ–¥–Ω—ã—Ö –ø–æ—Å—Ç–æ–≤ –≤–æ –í–ö–æ–Ω—Ç–∞–∫—Ç–µ üòâ")

# –ü—Ä–∏–º–µ—Ä –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —Ç–µ–∫—Å—Ç–∞ —Å OpenAI
def generate_text(prompt: str) -> str:
    try:
        response = openai.ChatCompletion.create(
            model="gpt-3.5-turbo",  # –ò–ª–∏ –¥—Ä—É–≥–æ–π, –µ—Å–ª–∏ –¥–æ—Å—Ç—É–ø–µ–Ω
            messages=[{"role": "user", "content": prompt}],
            temperature=0.7,
            max_tokens=200,
        )
        return response['choices'][0]['message']['content']
    except Exception as e:
        return f"–û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏: {str(e)}"

# –ü—É–±–ª–∏–∫–∞—Ü–∏—è –≤ –í–ö–æ–Ω—Ç–∞–∫—Ç–µ
def post_to_vk(text: str):
    url = "https://api.vk.com/method/wall.post"
    params = {
        "owner_id": f"-{VK_GROUP_ID}",
        "message": text,
        "access_token": VK_TOKEN,
        "v": "5.199"
    }
    response = requests.post(url, params=params)
    return response.json()

# –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∏ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ –ø–æ—Å—Ç–∞
@dp.message_handler(commands=["post"])
async def handle_post(message: types.Message):
    await message.reply("–ì–µ–Ω–µ—Ä–∏—Ä—É—é –ø–æ—Å—Ç...")
    prompt = "–ù–∞–ø–∏—à–∏ —Å—Ç–∏–ª—å–Ω—ã–π –∏ –¥–µ—Ä–∑–∫–∏–π –ø–æ—Å—Ç –¥–ª—è –≥—Ä—É–ø–ø—ã –ø—Ä–æ –º–æ–¥—É, –∏—Å–∫—É—Å—Å—Ç–≤–æ –∏ –ª–∞–∫—à–µ—Ä–∏. –ö–æ—Ä–æ—Ç–∫–æ, —Ü–µ–ø–ª—è—é—â–µ."
    text = generate_text(prompt)
    vk_response = post_to_vk(text)
    if "error" in vk_response:
        await message.reply(f"–û—à–∏–±–∫–∞ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏: {vk_response['error']['error_msg']}")
    else:
        await message.reply("–ü–æ—Å—Ç —É—Å–ø–µ—à–Ω–æ –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω –≤–æ –í–ö–æ–Ω—Ç–∞–∫—Ç–µ!")

if __name__ == "__main__":
    executor.start_polling(dp, skip_updates=True)
